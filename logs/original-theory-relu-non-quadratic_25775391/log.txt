{
  optnet_optimize : true
  generate_graph : false
  init_value : 10
  randomcrop : 4
  batchSize : 64
  epoch_step : 1
  randomcrop_type : "reflection"
  learningRate : 0.1
  model : "original-theory-relu-non-quadratic"
  save : "logs/original-theory-relu-non-quadratic_25775391"
  dampening : 0
  learningRateDecayRatio : 0.98
  shortcutType : "A"
  nesterov : true
  cudnn_deterministic : false
  depth : 28
  weightDecay : 5e-07
  multiply_input_factor : 1
  dataset : "./datasets/cifar100_combined.t7"
  imageSize : 32
  momentum : 0.9
  optimMethod : "sgd"
  max_epoch : 1500
  widen_factor : 20
  hflip : true
  dropout : 0
  learningRateDecay : 0.00015
  nGPU : 1
  data_type : "torch.CudaTensor"
}
==> loading data	
==> configuring model	
1	groups	
16	5120	3	3	1	1	1	1	16	
5120	320	1	1	1	1	0	0	160	
320	5120	3	3	1	1	1	1	320	
5120	320	1	1	1	1	0	0	80	
1	groups	
320	5120	3	3	1	1	1	1	320	
5120	320	1	1	1	1	0	0	160	
320	5120	3	3	1	1	1	1	320	
5120	320	1	1	1	1	0	0	80	
1	groups	
320	5120	3	3	1	1	1	1	320	
5120	320	1	1	1	1	0	0	160	
320	5120	3	3	1	1	1	1	320	
5120	320	1	1	1	1	0	0	80	
1	groups	
320	5120	3	3	1	1	1	1	320	
5120	320	1	1	1	1	0	0	160	
320	5120	3	3	1	1	1	1	320	
5120	320	1	1	1	1	0	0	80	
1	groups	
320	10240	3	3	2	2	1	1	320	
10240	640	1	1	1	1	0	0	320	
640	10240	3	3	1	1	1	1	640	
10240	640	1	1	1	1	0	0	160	
1	groups	
640	10240	3	3	1	1	1	1	640	
10240	640	1	1	1	1	0	0	320	
640	10240	3	3	1	1	1	1	640	
10240	640	1	1	1	1	0	0	160	
1	groups	
640	10240	3	3	1	1	1	1	640	
10240	640	1	1	1	1	0	0	320	
640	10240	3	3	1	1	1	1	640	
10240	640	1	1	1	1	0	0	160	
1	groups	
640	10240	3	3	1	1	1	1	640	
10240	640	1	1	1	1	0	0	320	
640	10240	3	3	1	1	1	1	640	
10240	640	1	1	1	1	0	0	160	
1	groups	
640	20480	3	3	2	2	1	1	640	
20480	1280	1	1	1	1	0	0	640	
1280	20480	3	3	1	1	1	1	1280	
20480	1280	1	1	1	1	0	0	320	
1	groups	
1280	20480	3	3	1	1	1	1	1280	
20480	1280	1	1	1	1	0	0	640	
1280	20480	3	3	1	1	1	1	1280	
20480	1280	1	1	1	1	0	0	320	
1	groups	
1280	20480	3	3	1	1	1	1	1280	
20480	1280	1	1	1	1	0	0	640	
1280	20480	3	3	1	1	1	1	1280	
20480	1280	1	1	1	1	0	0	320	
1	groups	
1280	20480	3	3	1	1	1	1	1280	
20480	1280	1	1	1	1	0	0	640	
1280	20480	3	3	1	1	1	1	1280	
20480	1280	1	1	1	1	0	0	320	
forward output	{
  1 : CudaTensor - size: 1x100
}
backward output	{
  1 : CudaTensor - size: 1x3x32x32
}
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
  (1): cudnn.SpatialConvolution(3 -> 16, 3x3, 1,1, 1,1) without bias
  (2): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> (3) -> (4) -> output]
      (1): cudnn.SpatialBatchNormalization
      (2): cudnn.ReLU
      (3): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> output]
          |      (1): cudnn.SpatialConvolution(16 -> 5120, 3x3, 1,1, 1,1) without bias
          |      (2): cudnn.SpatialBatchNormalization
          |      (3): cudnn.ReLU
          |      (4): cudnn.SpatialConvolution(5120 -> 320, 1x1) without bias
          |      (5): cudnn.SpatialBatchNormalization
          |      (6): cudnn.ReLU
          |      (7): cudnn.SpatialConvolution(320 -> 5120, 3x3, 1,1, 1,1) without bias
          |      (8): cudnn.SpatialBatchNormalization
          |      (9): cudnn.ReLU
          |      (10): cudnn.SpatialConvolution(5120 -> 320, 1x1) without bias
          |    }
          |`-> (2): cudnn.SpatialConvolution(16 -> 320, 1x1) without bias
           ... -> output
      }
      (4): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> output]
          |      (1): cudnn.SpatialBatchNormalization
          |      (2): cudnn.ReLU
          |      (3): cudnn.SpatialConvolution(320 -> 5120, 3x3, 1,1, 1,1) without bias
          |      (4): cudnn.SpatialBatchNormalization
          |      (5): cudnn.ReLU
          |      (6): cudnn.SpatialConvolution(5120 -> 320, 1x1) without bias
          |      (7): cudnn.SpatialBatchNormalization
          |      (8): cudnn.ReLU
          |      (9): cudnn.SpatialConvolution(320 -> 5120, 3x3, 1,1, 1,1) without bias
          |      (10): cudnn.SpatialBatchNormalization
          |      (11): cudnn.ReLU
          |      (12): cudnn.SpatialConvolution(5120 -> 320, 1x1) without bias
          |    }
          |`-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> output]
          |      (1): cudnn.SpatialBatchNormalization
          |      (2): cudnn.ReLU
          |      (3): cudnn.SpatialConvolution(320 -> 5120, 3x3, 1,1, 1,1) without bias
          |      (4): cudnn.SpatialBatchNormalization
          |      (5): cudnn.ReLU
          |      (6): cudnn.SpatialConvolution(5120 -> 320, 1x1) without bias
          |      (7): cudnn.SpatialBatchNormalization
          |      (8): cudnn.ReLU
          |      (9): cudnn.SpatialConvolution(320 -> 5120, 3x3, 1,1, 1,1) without bias
          |      (10): cudnn.SpatialBatchNormalization
          |      (11): cudnn.ReLU
          |      (12): cudnn.SpatialConvolution(5120 -> 320, 1x1) without bias
          |    }
          |`-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> output]
          |      (1): cudnn.SpatialBatchNormalization
          |      (2): cudnn.ReLU
          |      (3): cudnn.SpatialConvolution(320 -> 5120, 3x3, 1,1, 1,1) without bias
          |      (4): cudnn.SpatialBatchNormalization
          |      (5): cudnn.ReLU
          |      (6): cudnn.SpatialConvolution(5120 -> 320, 1x1) without bias
          |      (7): cudnn.SpatialBatchNormalization
          |      (8): cudnn.ReLU
          |      (9): cudnn.SpatialConvolution(320 -> 5120, 3x3, 1,1, 1,1) without bias
          |      (10): cudnn.SpatialBatchNormalization
          |      (11): cudnn.ReLU
          |      (12): cudnn.SpatialConvolution(5120 -> 320, 1x1) without bias
          |    }
          |`-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (3): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> (3) -> (4) -> output]
      (1): cudnn.SpatialBatchNormalization
      (2): cudnn.ReLU
      (3): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> output]
          |      (1): cudnn.SpatialConvolution(320 -> 10240, 3x3, 2,2, 1,1) without bias
          |      (2): cudnn.SpatialBatchNormalization
          |      (3): cudnn.ReLU
          |      (4): cudnn.SpatialConvolution(10240 -> 640, 1x1) without bias
          |      (5): cudnn.SpatialBatchNormalization
          |      (6): cudnn.ReLU
          |      (7): cudnn.SpatialConvolution(640 -> 10240, 3x3, 1,1, 1,1) without bias
          |      (8): cudnn.SpatialBatchNormalization
          |      (9): cudnn.ReLU
          |      (10): cudnn.SpatialConvolution(10240 -> 640, 1x1) without bias
          |    }
          |`-> (2): cudnn.SpatialConvolution(320 -> 640, 1x1, 2,2) without bias
           ... -> output
      }
      (4): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> output]
          |      (1): cudnn.SpatialBatchNormalization
          |      (2): cudnn.ReLU
          |      (3): cudnn.SpatialConvolution(640 -> 10240, 3x3, 1,1, 1,1) without bias
          |      (4): cudnn.SpatialBatchNormalization
          |      (5): cudnn.ReLU
          |      (6): cudnn.SpatialConvolution(10240 -> 640, 1x1) without bias
          |      (7): cudnn.SpatialBatchNormalization
          |      (8): cudnn.ReLU
          |      (9): cudnn.SpatialConvolution(640 -> 10240, 3x3, 1,1, 1,1) without bias
          |      (10): cudnn.SpatialBatchNormalization
          |      (11): cudnn.ReLU
          |      (12): cudnn.SpatialConvolution(10240 -> 640, 1x1) without bias
          |    }
          |`-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> output]
          |      (1): cudnn.SpatialBatchNormalization
          |      (2): cudnn.ReLU
          |      (3): cudnn.SpatialConvolution(640 -> 10240, 3x3, 1,1, 1,1) without bias
          |      (4): cudnn.SpatialBatchNormalization
          |      (5): cudnn.ReLU
          |      (6): cudnn.SpatialConvolution(10240 -> 640, 1x1) without bias
          |      (7): cudnn.SpatialBatchNormalization
          |      (8): cudnn.ReLU
          |      (9): cudnn.SpatialConvolution(640 -> 10240, 3x3, 1,1, 1,1) without bias
          |      (10): cudnn.SpatialBatchNormalization
          |      (11): cudnn.ReLU
          |      (12): cudnn.SpatialConvolution(10240 -> 640, 1x1) without bias
          |    }
          |`-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> output]
          |      (1): cudnn.SpatialBatchNormalization
          |      (2): cudnn.ReLU
          |      (3): cudnn.SpatialConvolution(640 -> 10240, 3x3, 1,1, 1,1) without bias
          |      (4): cudnn.SpatialBatchNormalization
          |      (5): cudnn.ReLU
          |      (6): cudnn.SpatialConvolution(10240 -> 640, 1x1) without bias
          |      (7): cudnn.SpatialBatchNormalization
          |      (8): cudnn.ReLU
          |      (9): cudnn.SpatialConvolution(640 -> 10240, 3x3, 1,1, 1,1) without bias
          |      (10): cudnn.SpatialBatchNormalization
          |      (11): cudnn.ReLU
          |      (12): cudnn.SpatialConvolution(10240 -> 640, 1x1) without bias
          |    }
          |`-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (4): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> output]
    (1): nn.Sequential {
      [input -> (1) -> (2) -> (3) -> (4) -> output]
      (1): cudnn.SpatialBatchNormalization
      (2): cudnn.ReLU
      (3): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> output]
          |      (1): cudnn.SpatialConvolution(640 -> 20480, 3x3, 2,2, 1,1) without bias
          |      (2): cudnn.SpatialBatchNormalization
          |      (3): cudnn.ReLU
          |      (4): cudnn.SpatialConvolution(20480 -> 1280, 1x1) without bias
          |      (5): cudnn.SpatialBatchNormalization
          |      (6): cudnn.ReLU
          |      (7): cudnn.SpatialConvolution(1280 -> 20480, 3x3, 1,1, 1,1) without bias
          |      (8): cudnn.SpatialBatchNormalization
          |      (9): cudnn.ReLU
          |      (10): cudnn.SpatialConvolution(20480 -> 1280, 1x1) without bias
          |    }
          |`-> (2): cudnn.SpatialConvolution(640 -> 1280, 1x1, 2,2) without bias
           ... -> output
      }
      (4): nn.CAddTable
    }
    (2): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> output]
          |      (1): cudnn.SpatialBatchNormalization
          |      (2): cudnn.ReLU
          |      (3): cudnn.SpatialConvolution(1280 -> 20480, 3x3, 1,1, 1,1) without bias
          |      (4): cudnn.SpatialBatchNormalization
          |      (5): cudnn.ReLU
          |      (6): cudnn.SpatialConvolution(20480 -> 1280, 1x1) without bias
          |      (7): cudnn.SpatialBatchNormalization
          |      (8): cudnn.ReLU
          |      (9): cudnn.SpatialConvolution(1280 -> 20480, 3x3, 1,1, 1,1) without bias
          |      (10): cudnn.SpatialBatchNormalization
          |      (11): cudnn.ReLU
          |      (12): cudnn.SpatialConvolution(20480 -> 1280, 1x1) without bias
          |    }
          |`-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (3): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> output]
          |      (1): cudnn.SpatialBatchNormalization
          |      (2): cudnn.ReLU
          |      (3): cudnn.SpatialConvolution(1280 -> 20480, 3x3, 1,1, 1,1) without bias
          |      (4): cudnn.SpatialBatchNormalization
          |      (5): cudnn.ReLU
          |      (6): cudnn.SpatialConvolution(20480 -> 1280, 1x1) without bias
          |      (7): cudnn.SpatialBatchNormalization
          |      (8): cudnn.ReLU
          |      (9): cudnn.SpatialConvolution(1280 -> 20480, 3x3, 1,1, 1,1) without bias
          |      (10): cudnn.SpatialBatchNormalization
          |      (11): cudnn.ReLU
          |      (12): cudnn.SpatialConvolution(20480 -> 1280, 1x1) without bias
          |    }
          |`-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
    (4): nn.Sequential {
      [input -> (1) -> (2) -> output]
      (1): nn.ConcatTable {
        input
          |`-> (1): nn.Sequential {
          |      [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> output]
          |      (1): cudnn.SpatialBatchNormalization
          |      (2): cudnn.ReLU
          |      (3): cudnn.SpatialConvolution(1280 -> 20480, 3x3, 1,1, 1,1) without bias
          |      (4): cudnn.SpatialBatchNormalization
          |      (5): cudnn.ReLU
          |      (6): cudnn.SpatialConvolution(20480 -> 1280, 1x1) without bias
          |      (7): cudnn.SpatialBatchNormalization
          |      (8): cudnn.ReLU
          |      (9): cudnn.SpatialConvolution(1280 -> 20480, 3x3, 1,1, 1,1) without bias
          |      (10): cudnn.SpatialBatchNormalization
          |      (11): cudnn.ReLU
          |      (12): cudnn.SpatialConvolution(20480 -> 1280, 1x1) without bias
          |    }
          |`-> (2): nn.Identity
           ... -> output
      }
      (2): nn.CAddTable
    }
  }
  (5): cudnn.SpatialBatchNormalization
  (6): cudnn.ReLU
  (7): cudnn.SpatialAveragePooling(8x8, 1,1)
  (8): nn.View(1280)
  (9): nn.Linear(1280 -> 100)
}
Network has	52	convolutions	
