{
  optnet_optimize : true
  generate_graph : false
  init_value : 10
  randomcrop : 4
  batchSize : 32
  epoch_step : 
    {
      1 : 60
      2 : 120
      3 : 160
    }
  randomcrop_type : "reflection"
  learningRate : 0.02
  model : "my"
  save : "logs/my_232526376"
  dampening : 0
  learningRateDecayRatio : 0.2
  shortcutType : "A"
  nesterov : true
  cudnn_deterministic : false
  depth : 50
  weightDecay : 0.0005
  multiply_input_factor : 1
  dataset : "./datasets/cifar100_whitened.t7"
  imageSize : 32
  momentum : 0.9
  optimMethod : "sgd"
  max_epoch : 200
  widen_factor : 1
  hflip : true
  dropout : 0
  learningRateDecay : 0
  nGPU : 1
  data_type : "torch.CudaTensor"
}
==> loading data	
==> configuring model	
2	10368	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> output]
  (1): cudnn.SpatialConvolution(3 -> 36, 3x3)
  (2): cudnn.SpatialBatchNormalization
  (3): cudnn.SpatialMaxPooling(3x3, 2,2)
  (4): nn.PReLU
  (5): cudnn.SpatialConvolution(36 -> 1296, 3x3)
  (6): cudnn.SpatialBatchNormalization
  (7): cudnn.SpatialMaxPooling(3x3, 2,2)
  (8): nn.PReLU
  (9): cudnn.SpatialConvolution(1296 -> 10368, 4x4)
  (10): cudnn.SpatialBatchNormalization
  (11): nn.PReLU
  (12): nn.Reshape(41472)
  (13): nn.Linear(41472 -> 100)
}
Network has	3	convolutions	
Will save at logs/my_232526376	
==> online epoch # 1 [batchSize = 32]	
{
  epoch : 1
  test_acc : 2.96
  loss : 372.13031548971
  train_acc : 3.973271446863
  lr : 0.02
  train_time : 70.303775072098
  test_time : 5.0592489242554
  n_parameters : 4857943
  train_loss : 372.13031548971
}
{
  optnet_optimize : true
  generate_graph : false
  num_classes : 100
  init_value : 10
  randomcrop : 4
  batchSize : 32
  epoch_step : 
    {
      1 : 60
      2 : 120
      3 : 160
    }
  randomcrop_type : "reflection"
  learningRate : 0.02
  model : "my"
  save : "logs/my_232526376"
  dampening : 0
  learningRateDecayRatio : 0.2
  shortcutType : "A"
  nesterov : true
  cudnn_deterministic : false
  depth : 50
  weightDecay : 0.0005
  multiply_input_factor : 1
  dataset : "./datasets/cifar100_whitened.t7"
  imageSize : 32
  momentum : 0.9
  optimMethod : "sgd"
  max_epoch : 200
  widen_factor : 1
  hflip : true
  dropout : 0
  learningRateDecay : 0
  nGPU : 1
  data_type : "torch.CudaTensor"
}
json_stats: {"optnet_optimize":true,"learningRate":0.02,"randomcrop":4,"batchSize":32,"data_type":"torch.CudaTensor","model":"my","nesterov":true,"cudnn_deterministic":false,"multiply_input_factor":1,"dataset":".\/datasets\/cifar100_whitened.t7","momentum":0.9,"optimMethod":"sgd","dropout":0,"weightDecay":0.0005,"test_acc":2.96,"init_value":10,"train_acc":3.973271446863,"widen_factor":1,"imageSize":32,"train_time":70.303775072098,"save":"logs\/my_232526376","dampening":0,"shortcutType":"A","epoch":1,"nGPU":1,"depth":50,"learningRateDecay":0,"hflip":true,"max_epoch":200,"num_classes":100,"lr":0.02,"learningRateDecayRatio":0.2,"generate_graph":false,"train_loss":372.13031548971,"randomcrop_type":"reflection","test_time":5.0592489242554,"n_parameters":4857943,"epoch_step":[60,120,160],"loss":372.13031548971}	
==> online epoch # 2 [batchSize = 32]	
{
  epoch : 2
  test_acc : 1
  loss : nan
  train_acc : 4.3373879641485
  lr : 0.02
  train_time : 69.567081928253
  test_time : 5.2310290336609
  n_parameters : 4857943
  train_loss : nan
}
{
  optnet_optimize : true
  generate_graph : false
  num_classes : 100
  init_value : 10
  randomcrop : 4
  batchSize : 32
  epoch_step : 
    {
      1 : 60
      2 : 120
      3 : 160
    }
  randomcrop_type : "reflection"
  learningRate : 0.02
  model : "my"
  save : "logs/my_232526376"
  dampening : 0
  learningRateDecayRatio : 0.2
  shortcutType : "A"
  nesterov : true
  cudnn_deterministic : false
  depth : 50
  weightDecay : 0.0005
  multiply_input_factor : 1
  dataset : "./datasets/cifar100_whitened.t7"
  imageSize : 32
  momentum : 0.9
  optimMethod : "sgd"
  max_epoch : 200
  widen_factor : 1
  hflip : true
  dropout : 0
  learningRateDecay : 0
  nGPU : 1
  data_type : "torch.CudaTensor"
}
