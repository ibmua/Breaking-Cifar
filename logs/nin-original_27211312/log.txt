{
  optnet_optimize : true
  generate_graph : false
  init_value : 10
  randomcrop : 4
  batchSize : 256
  epoch_step : 1
  randomcrop_type : "reflection"
  learningRate : 0.1
  model : "nin-original"
  save : "logs/nin-original_27211312"
  dampening : 0
  learningRateDecayRatio : 0.97
  shortcutType : "A"
  nesterov : false
  cudnn_deterministic : false
  depth : 40
  weightDecay : 5e-07
  multiply_input_factor : 1
  dataset : "./datasets/cifar100_combined.t7"
  imageSize : 32
  momentum : 0.8
  optimMethod : "sgd"
  max_epoch : 1500
  widen_factor : 4
  hflip : true
  dropout : 0
  learningRateDecay : 1e-05
  nGPU : 1
  data_type : "torch.CudaTensor"
}
==> loading data	
==> configuring model	
forward output	{
  1 : FloatTensor - size: 1x99
}
backward output	{
  1 : FloatTensor - size: 1x3x32x32
}
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> (19) -> (20) -> (21) -> (22) -> (23) -> (24) -> (25) -> (26) -> (27) -> (28) -> (29) -> (30) -> (31) -> (32) -> output]
  (1): cudnn.SpatialConvolution(3 -> 192, 5x5, 1,1, 2,2) without bias
  (2): cudnn.SpatialBatchNormalization
  (3): cudnn.ReLU
  (4): cudnn.SpatialConvolution(192 -> 160, 1x1) without bias
  (5): cudnn.SpatialBatchNormalization
  (6): cudnn.ReLU
  (7): cudnn.SpatialConvolution(160 -> 96, 1x1) without bias
  (8): cudnn.SpatialBatchNormalization
  (9): cudnn.ReLU
  (10): cudnn.SpatialMaxPooling(3x3, 2,2)
  (11): cudnn.SpatialConvolution(96 -> 192, 5x5, 1,1, 2,2) without bias
  (12): cudnn.SpatialBatchNormalization
  (13): cudnn.ReLU
  (14): cudnn.SpatialConvolution(192 -> 192, 1x1) without bias
  (15): cudnn.SpatialBatchNormalization
  (16): cudnn.ReLU
  (17): cudnn.SpatialConvolution(192 -> 192, 1x1) without bias
  (18): cudnn.SpatialBatchNormalization
  (19): cudnn.ReLU
  (20): cudnn.SpatialAveragePooling(3x3, 2,2)
  (21): cudnn.SpatialConvolution(192 -> 192, 3x3, 1,1, 1,1) without bias
  (22): cudnn.SpatialBatchNormalization
  (23): cudnn.ReLU
  (24): cudnn.SpatialConvolution(192 -> 192, 1x1) without bias
  (25): cudnn.SpatialBatchNormalization
  (26): cudnn.ReLU
  (27): cudnn.SpatialConvolution(192 -> 192, 1x1) without bias
  (28): cudnn.SpatialBatchNormalization
  (29): cudnn.ReLU
  (30): cudnn.SpatialAveragePooling(8x8, 1,1)
  (31): nn.View(-1)
  (32): nn.Linear(192 -> 99)
}
Network has	9	convolutions	
Will save at logs/nin-original_27211312	
==> online epoch # 1 [batchSize = 256]	
{
  epoch : 1
  test_acc : 10.95
  loss : 4.0302325285398
  train_acc : 8.3133012820513
  lr : 0.09699
  train_time : 22.034292936325
  test_time : 1.8212220668793
  n_parameters : 1022819
  train_loss : 4.0302325285398
}
{
  optnet_optimize : true
  generate_graph : false
  num_classes : 99
  init_value : 10
  randomcrop : 4
  batchSize : 256
  epoch_step : 1
  randomcrop_type : "reflection"
  learningRate : 0.09699
  model : "nin-original"
  save : "logs/nin-original_27211312"
  dampening : 0
  learningRateDecayRatio : 0.97
  shortcutType : "A"
  nesterov : false
  cudnn_deterministic : false
  depth : 40
  weightDecay : 5e-07
  multiply_input_factor : 1
  dataset : "./datasets/cifar100_combined.t7"
  imageSize : 32
  momentum : 0.8
  optimMethod : "sgd"
  max_epoch : 1500
  widen_factor : 4
  hflip : true
  dropout : 0
  learningRateDecay : 1e-05
  nGPU : 1
  data_type : "torch.CudaTensor"
}
json_stats: {"optnet_optimize":true,"learningRate":0.09699,"randomcrop":4,"batchSize":256,"data_type":"torch.CudaTensor","model":"nin-original","nesterov":false,"cudnn_deterministic":false,"multiply_input_factor":1,"dataset":".\/datasets\/cifar100_combined.t7","momentum":0.8,"optimMethod":"sgd","dropout":0,"weightDecay":5e-07,"test_acc":10.95,"init_value":10,"train_acc":8.3133012820513,"widen_factor":4,"imageSize":32,"train_time":22.034292936325,"save":"logs\/nin-original_27211312","dampening":0,"shortcutType":"A","epoch":1,"nGPU":1,"depth":40,"learningRateDecay":1e-05,"hflip":true,"max_epoch":1500,"num_classes":99,"lr":0.09699,"learningRateDecayRatio":0.97,"generate_graph":false,"train_loss":4.0302325285398,"randomcrop_type":"reflection","test_time":1.8212220668793,"n_parameters":1022819,"epoch_step":1,"loss":4.0302325285398}	
==> online epoch # 2 [batchSize = 256]	
