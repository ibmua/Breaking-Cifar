{
  optnet_optimize : true
  generate_graph : false
  learningRate : 0.1
  init_value : 10
  randomcrop : 4
  sequences : 2
  epoch_step : 1
  randomcrop_type : "reflection"
  learningRateDecayRatio : 0.994
  model : "hoard-2-5-reducing"
  save : "logs/hoard-2-5-reducing_1031619505"
  dampening : 0
  weightDecay : 0.0005
  shortcutType : "A"
  nesterov : true
  cudnn_deterministic : false
  depth : 1
  nGPU : 1
  multiply_input_factor : 1
  dataset : "./datasets/cifar100_combined.t7"
  max_epoch : 1500
  momentum : 0.9
  optimMethod : "sgd"
  widen_factor : 1
  hflip : true
  imageSize : 32
  dropout : 0
  learningRateDecay : 0.00015
  data_type : "torch.CudaTensor"
  batchSize : 64
}
==> loading data	
==> configuring model	
forward output	{
  1 : CudaTensor - size: 1x100
}
backward output	{
  1 : CudaTensor - size: 1x3x32x32
}
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> output]
  (1): cudnn.SpatialConvolution(3 -> 32, 3x3, 1,1, 1,1) without bias
  (2): cudnn.SpatialBatchNormalization
  (3): cudnn.ReLU
  (4): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> output]
    (1): nn.Concat {
      input
        |`-> (1): nn.Identity
        |`-> (2): nn.Sequential {
               [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
               (1): cudnn.SpatialConvolution(32 -> 32, 1x1)
               (2): cudnn.SpatialBatchNormalization
               (3): nn.ELU (alpha:1.000000)
               (4): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1)
               (5): cudnn.SpatialBatchNormalization
               (6): nn.ELU (alpha:1.000000)
               (7): cudnn.SpatialConvolution(32 -> 32, 3x3, 1,1, 1,1)
               (8): cudnn.SpatialBatchNormalization
               (9): nn.ELU (alpha:1.000000)
             }
         ... -> output
    }
    (2): cudnn.SpatialConvolution(64 -> 64, 1x1)
    (3): cudnn.SpatialBatchNormalization
    (4): cudnn.ReLU
    (5): nn.Concat {
      input
        |`-> (1): nn.Identity
        |`-> (2): nn.Sequential {
               [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
               (1): cudnn.SpatialConvolution(64 -> 64, 1x1)
               (2): cudnn.SpatialBatchNormalization
               (3): nn.ELU (alpha:1.000000)
               (4): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1)
               (5): cudnn.SpatialBatchNormalization
               (6): nn.ELU (alpha:1.000000)
               (7): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1)
               (8): cudnn.SpatialBatchNormalization
               (9): nn.ELU (alpha:1.000000)
             }
         ... -> output
    }
    (6): cudnn.SpatialConvolution(128 -> 64, 1x1)
    (7): cudnn.SpatialBatchNormalization
    (8): cudnn.ReLU
  }
  (5): cudnn.SpatialMaxPooling(3x3, 2,2)
  (6): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> output]
    (1): nn.Concat {
      input
        |`-> (1): nn.Identity
        |`-> (2): nn.Sequential {
               [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
               (1): cudnn.SpatialConvolution(64 -> 64, 1x1)
               (2): cudnn.SpatialBatchNormalization
               (3): nn.ELU (alpha:1.000000)
               (4): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1)
               (5): cudnn.SpatialBatchNormalization
               (6): nn.ELU (alpha:1.000000)
               (7): cudnn.SpatialConvolution(64 -> 64, 3x3, 1,1, 1,1)
               (8): cudnn.SpatialBatchNormalization
               (9): nn.ELU (alpha:1.000000)
             }
         ... -> output
    }
    (2): cudnn.SpatialConvolution(128 -> 128, 1x1)
    (3): cudnn.SpatialBatchNormalization
    (4): cudnn.ReLU
    (5): nn.Concat {
      input
        |`-> (1): nn.Identity
        |`-> (2): nn.Sequential {
               [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
               (1): cudnn.SpatialConvolution(128 -> 128, 1x1)
               (2): cudnn.SpatialBatchNormalization
               (3): nn.ELU (alpha:1.000000)
               (4): cudnn.SpatialConvolution(128 -> 128, 3x3, 1,1, 1,1)
               (5): cudnn.SpatialBatchNormalization
               (6): nn.ELU (alpha:1.000000)
               (7): cudnn.SpatialConvolution(128 -> 128, 3x3, 1,1, 1,1)
               (8): cudnn.SpatialBatchNormalization
               (9): nn.ELU (alpha:1.000000)
             }
         ... -> output
    }
    (6): cudnn.SpatialConvolution(256 -> 128, 1x1)
    (7): cudnn.SpatialBatchNormalization
    (8): cudnn.ReLU
  }
  (7): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> output]
    (1): cudnn.SpatialConvolution(128 -> 128, 3x3, 1,1, 1,1)
    (2): cudnn.SpatialBatchNormalization
    (3): nn.ELU (alpha:1.000000)
    (4): cudnn.SpatialConvolution(128 -> 256, 1x1)
    (5): cudnn.SpatialBatchNormalization
    (6): nn.ELU (alpha:1.000000)
  }
  (8): cudnn.SpatialMaxPooling(3x3, 2,2)
  (9): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> output]
    (1): nn.Concat {
      input
        |`-> (1): nn.Identity
        |`-> (2): nn.Sequential {
               [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
               (1): cudnn.SpatialConvolution(256 -> 256, 1x1)
               (2): cudnn.SpatialBatchNormalization
               (3): nn.ELU (alpha:1.000000)
               (4): cudnn.SpatialConvolution(256 -> 256, 3x3, 1,1, 1,1)
               (5): cudnn.SpatialBatchNormalization
               (6): nn.ELU (alpha:1.000000)
               (7): cudnn.SpatialConvolution(256 -> 256, 3x3, 1,1, 1,1)
               (8): cudnn.SpatialBatchNormalization
               (9): nn.ELU (alpha:1.000000)
             }
         ... -> output
    }
    (2): cudnn.SpatialConvolution(512 -> 256, 1x1)
    (3): cudnn.SpatialBatchNormalization
    (4): cudnn.ReLU
    (5): nn.Concat {
      input
        |`-> (1): nn.Identity
        |`-> (2): nn.Sequential {
               [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> output]
               (1): cudnn.SpatialConvolution(256 -> 256, 1x1)
               (2): cudnn.SpatialBatchNormalization
               (3): nn.ELU (alpha:1.000000)
               (4): cudnn.SpatialConvolution(256 -> 256, 3x3, 1,1, 1,1)
               (5): cudnn.SpatialBatchNormalization
               (6): nn.ELU (alpha:1.000000)
               (7): cudnn.SpatialConvolution(256 -> 256, 3x3, 1,1, 1,1)
               (8): cudnn.SpatialBatchNormalization
               (9): nn.ELU (alpha:1.000000)
             }
         ... -> output
    }
    (6): cudnn.SpatialConvolution(512 -> 256, 1x1)
    (7): cudnn.SpatialBatchNormalization
    (8): cudnn.ReLU
  }
  (10): nn.Sequential {
    [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> output]
    (1): cudnn.SpatialConvolution(256 -> 256, 3x3, 1,1, 1,1)
    (2): cudnn.SpatialBatchNormalization
    (3): nn.ELU (alpha:1.000000)
    (4): cudnn.SpatialConvolution(256 -> 512, 1x1)
    (5): cudnn.SpatialBatchNormalization
    (6): nn.ELU (alpha:1.000000)
  }
  (11): cudnn.VolumetricAveragePooling
  (12): nn.View(-1)
  (13): nn.Linear(256 -> 100)
}
Network has	29	convolutions	
Will save at logs/hoard-2-5-reducing_1031619505	
==> online epoch # 1 [batchSize = 64]	
{
  epoch : 1
  test_acc : 20.32
  loss : 3.6424414549839
  train_acc : 11.949823943662
  lr : 0.09925
  train_time : 46.173640012741
  test_time : 4.1169710159302
  n_parameters : 3670052
  train_loss : 3.6424414549839
}
{
  optnet_optimize : true
  num_classes : 100
  generate_graph : false
  learningRate : 0.09925
  init_value : 10
  randomcrop : 4
  sequences : 2
  epoch_step : 1
  randomcrop_type : "reflection"
  learningRateDecayRatio : 0.994
  model : "hoard-2-5-reducing"
  save : "logs/hoard-2-5-reducing_1031619505"
  dampening : 0
  weightDecay : 0.0005
  shortcutType : "A"
  nesterov : true
  cudnn_deterministic : false
  depth : 1
  nGPU : 1
  multiply_input_factor : 1
  dataset : "./datasets/cifar100_combined.t7"
  max_epoch : 1500
  momentum : 0.9
  optimMethod : "sgd"
  widen_factor : 1
  hflip : true
  imageSize : 32
  dropout : 0
  learningRateDecay : 0.00015
  data_type : "torch.CudaTensor"
  batchSize : 64
}
json_stats: {"optnet_optimize":true,"loss":3.6424414549839,"randomcrop":4,"batchSize":64,"data_type":"torch.CudaTensor","model":"hoard-2-5-reducing","nesterov":true,"nGPU":1,"multiply_input_factor":1,"dataset":".\/datasets\/cifar100_combined.t7","momentum":0.9,"optimMethod":"sgd","dropout":0,"weightDecay":0.0005,"test_acc":20.32,"init_value":10,"train_acc":11.949823943662,"sequences":2,"epoch_step":1,"train_time":46.173640012741,"learningRateDecayRatio":0.994,"dampening":0,"learningRateDecay":0.00015,"max_epoch":1500,"epoch":1,"imageSize":32,"depth":1,"hflip":true,"widen_factor":1,"num_classes":100,"save":"logs\/hoard-2-5-reducing_1031619505","lr":0.09925,"generate_graph":false,"learningRate":0.09925,"train_loss":3.6424414549839,"randomcrop_type":"reflection","test_time":4.1169710159302,"n_parameters":3670052,"cudnn_deterministic":false,"shortcutType":"A"}	
==> online epoch # 2 [batchSize = 64]	
{
  epoch : 2
  test_acc : 24.93
  loss : 2.996581849307
  train_acc : 22.867317541613
  lr : 0.0985045
  train_time : 47.492861032486
  test_time : 3.8643999099731
  n_parameters : 3670052
  train_loss : 2.996581849307
}
{
  optnet_optimize : true
  num_classes : 100
  generate_graph : false
  learningRate : 0.0985045
  init_value : 10
  randomcrop : 4
  sequences : 2
  epoch_step : 1
  randomcrop_type : "reflection"
  learningRateDecayRatio : 0.994
  model : "hoard-2-5-reducing"
  save : "logs/hoard-2-5-reducing_1031619505"
  dampening : 0
  weightDecay : 0.0005
  shortcutType : "A"
  nesterov : true
  cudnn_deterministic : false
  depth : 1
  nGPU : 1
  multiply_input_factor : 1
  dataset : "./datasets/cifar100_combined.t7"
  max_epoch : 1500
  momentum : 0.9
  optimMethod : "sgd"
  widen_factor : 1
  hflip : true
  imageSize : 32
  dropout : 0
  learningRateDecay : 0.00015
  data_type : "torch.CudaTensor"
  batchSize : 64
}
json_stats: {"optnet_optimize":true,"loss":2.996581849307,"randomcrop":4,"batchSize":64,"data_type":"torch.CudaTensor","model":"hoard-2-5-reducing","nesterov":true,"nGPU":1,"multiply_input_factor":1,"dataset":".\/datasets\/cifar100_combined.t7","momentum":0.9,"optimMethod":"sgd","dropout":0,"weightDecay":0.0005,"test_acc":24.93,"init_value":10,"train_acc":22.867317541613,"sequences":2,"epoch_step":1,"train_time":47.492861032486,"learningRateDecayRatio":0.994,"dampening":0,"learningRateDecay":0.00015,"max_epoch":1500,"epoch":2,"imageSize":32,"depth":1,"hflip":true,"widen_factor":1,"num_classes":100,"save":"logs\/hoard-2-5-reducing_1031619505","lr":0.0985045,"generate_graph":false,"learningRate":0.0985045,"train_loss":2.996581849307,"randomcrop_type":"reflection","test_time":3.8643999099731,"n_parameters":3670052,"cudnn_deterministic":false,"shortcutType":"A"}	
==> online epoch # 3 [batchSize = 64]	
{
  epoch : 3
  test_acc : 29.25
  loss : 2.6819072247467
  train_acc : 29.349391805378
  lr : 0.097763473
  train_time : 47.206968069077
  test_time : 3.7386319637299
  n_parameters : 3670052
  train_loss : 2.6819072247467
}
{
  optnet_optimize : true
  num_classes : 100
  generate_graph : false
  learningRate : 0.097763473
  init_value : 10
  randomcrop : 4
  sequences : 2
  epoch_step : 1
  randomcrop_type : "reflection"
  learningRateDecayRatio : 0.994
  model : "hoard-2-5-reducing"
  save : "logs/hoard-2-5-reducing_1031619505"
  dampening : 0
  weightDecay : 0.0005
  shortcutType : "A"
  nesterov : true
  cudnn_deterministic : false
  depth : 1
  nGPU : 1
  multiply_input_factor : 1
  dataset : "./datasets/cifar100_combined.t7"
  max_epoch : 1500
  momentum : 0.9
  optimMethod : "sgd"
  widen_factor : 1
  hflip : true
  imageSize : 32
  dropout : 0
  learningRateDecay : 0.00015
  data_type : "torch.CudaTensor"
  batchSize : 64
}
json_stats: {"optnet_optimize":true,"loss":2.6819072247467,"randomcrop":4,"batchSize":64,"data_type":"torch.CudaTensor","model":"hoard-2-5-reducing","nesterov":true,"nGPU":1,"multiply_input_factor":1,"dataset":".\/datasets\/cifar100_combined.t7","momentum":0.9,"optimMethod":"sgd","dropout":0,"weightDecay":0.0005,"test_acc":29.25,"init_value":10,"train_acc":29.349391805378,"sequences":2,"epoch_step":1,"train_time":47.206968069077,"learningRateDecayRatio":0.994,"dampening":0,"learningRateDecay":0.00015,"max_epoch":1500,"epoch":3,"imageSize":32,"depth":1,"hflip":true,"widen_factor":1,"num_classes":100,"save":"logs\/hoard-2-5-reducing_1031619505","lr":0.097763473,"generate_graph":false,"learningRate":0.097763473,"train_loss":2.6819072247467,"randomcrop_type":"reflection","test_time":3.7386319637299,"n_parameters":3670052,"cudnn_deterministic":false,"shortcutType":"A"}	
==> online epoch # 4 [batchSize = 64]	
